/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useLayoutEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import * as THREE from "three";

export default function VWPoloMaterials({ scene }) {
  const { nodes, materials } = useGLTF("models/VW_polo.glb");

  const ratioScale = Math.min(1.2, Math.max(0.5, window.innerWidth / 1920));

  useEffect(() => {
    materials.carpaint = new THREE.MeshPhysicalMaterial();
    materials.carpaint.color.set("#DC2626");
    materials.carpaint.roughness = 0.4;
    materials.carpaint.metalness = 0.2;
    materials.carpaint.clearcoat = 1;
    materials.carpaint.clearcoatRoughness = 0;

    materials.Glass_white.transparent = true;
    materials.Glass_white.roughness = 0.1;
    materials.Glass_white.opacity = 0.5;
    materials.Glass_white.reflectivity = 0.5;
    // materials.Glass_white.ior = 1.0;

    materials.glassRed = new THREE.MeshPhysicalMaterial();
    materials.glassRed.color.set("#DC2626");
    materials.glassRed.transparent = true;
    materials.glassRed.roughness = 0.1;
    materials.glassRed.opacity = 0.5;
    materials.glassRed.ior = 1.5;

    materials.chromeParts = new THREE.MeshPhysicalMaterial();
    materials.chromeParts.color.set("#D4D4D4");
    materials.chromeParts.roughness = 0.1;
    materials.chromeParts.metalness = 1;
    materials.chromeParts.clearcoat = 1;
    materials.chromeParts.clearcoatRoughness = 0;

    materials.roughChrome = new THREE.MeshPhysicalMaterial();
    materials.roughChrome.color.set("#171717");
    materials.roughChrome.roughness = 0.5;
    materials.roughChrome.metalness = 1;
    materials.roughChrome.clearcoat = 1;
    materials.roughChrome.clearcoatRoughness = 0;

    materials.pianoBlack = new THREE.MeshPhysicalMaterial();
    materials.pianoBlack.color.set("#18181B");
    materials.pianoBlack.roughness = 0.1;
    materials.pianoBlack.metalness = 0.1;

    materials.roughPlastic = new THREE.MeshPhysicalMaterial();
    materials.roughPlastic.color.set("#27272A");
    materials.roughPlastic.roughness = 0.4;
    materials.roughPlastic.metalness = 0.1;

    materials.tyreRubber = new THREE.MeshPhysicalMaterial();
    materials.tyreRubber.color.set("#27272A");
    materials.tyreRubber.roughness = 0.4;
    materials.tyreRubber.metalness = 0.1;

    materials.wheelPaint = new THREE.MeshPhysicalMaterial();
    materials.wheelPaint.color.set("#525252");
    materials.wheelPaint.roughness = 0.4;
    materials.wheelPaint.metalness = 0.1;
    materials.wheelPaint.clearcoat = 1;
    materials.wheelPaint.clearcoatRoughness = 0;
  }, [materials, scene, ratioScale]);

  useLayoutEffect(() => {
    materials["Glass-tint"].color.set("#0F172A");
    materials["Glass-tint"].transparent = true;
    materials["Glass-tint"].opacity = 0.9;
  }, [materials, scene]);
  return (
    <group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["red-painted-parts"].geometry}
        material={materials.carpaint}
        position={[0, 0, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.glass_area.geometry}
        material={materials["Glass-tint"]}
        position={[0, 0, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Headlamp_lens.geometry}
        material={materials.Glass_white}
        position={[0, 0, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["license-plate"].geometry}
        material={materials["ao-bake-others"]}
        position={[0, 0.506, 1.975]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["chrome-parts"].geometry}
        material={materials.chromeParts}
        position={[0.029, 0.679, 1.9]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["piano-black"].geometry}
        material={materials.pianoBlack}
        position={[0, 0, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["rough-chrome"].geometry}
        material={materials.roughChrome}
        position={[0, 0, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.wheels.geometry}
        material={materials.wheelPaint}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["wheel-nuts"].geometry}
        material={materials.wheelPaint}
        position={[0.802, 0.296, 1.144]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["brake-disk"].geometry}
        material={materials["ao-bake-others"]}
        rotation={[0, 0, -Math.PI / 2]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["brake-hub"].geometry}
          material={materials["ao-bake-others"]}
          rotation={[0, 0, Math.PI / 2]}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["brake-pad"].geometry}
        material={materials["ao-bake-others"]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ORVM_cover002.geometry}
        material={materials["ao-bake-others"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["hmsl-cover"].geometry}
        material={materials.glassRed}
        position={[0, -0.001, 1.558]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["tail-lamp_glow"].geometry}
        material={materials["Red-emission"]}
        position={[0.61, 0.897, -1.686]}
        rotation={[0, -0.045, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.matt_black.geometry}
        material={materials.roughPlastic}
        position={[0, -0.129, 2.022]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["wheel-cap-rear"].geometry}
        material={materials.wheelPaint}
        position={[0, 0.295, -1.321]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.interior_001002.geometry}
        material={materials["ao-bake-others"]}
        position={[0.022, 1.288, 0.334]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.wheels001.geometry}
        material={materials.wheelPaint}
        position={[0.802, 0.296, 1.144]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Tyre004.geometry}
        material={materials.tyreRubber}
      />
    </group>
  );
}

useGLTF.preload("models/VW_polo.glb");
